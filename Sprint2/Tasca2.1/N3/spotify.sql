-- MySQL Script generated by MySQL Workbench
-- Sun Mar 19 20:19:02 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spotify` ;
USE `Spotify` ;

-- -----------------------------------------------------
-- Table `Spotify`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`User` (
  `User_id` INT NOT NULL AUTO_INCREMENT,
  `User_email` VARCHAR(45) NOT NULL,
  `User_password` VARCHAR(45) NOT NULL,
  `User_name` VARCHAR(45) NOT NULL,
  `User_date_of_Birth` DATE NOT NULL,
  `User_sex` ENUM('MALE', 'FEMALE') NULL,
  `User_country` VARCHAR(45) NOT NULL,
  `User_zip` INT(5) NOT NULL,
  `Type` ENUM('Premium', 'Normal') NOT NULL,
  PRIMARY KEY (`User_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`Subscription` (
  `Subscription_id` INT NOT NULL AUTO_INCREMENT,
  `registration_date` DATETIME NULL,
  `renovation_date` DATETIME NULL,
  `User_User_id` INT NOT NULL,
  PRIMARY KEY (`Subscription_id`),
  INDEX `fk_Subscription_User_idx` (`User_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Subscription_User`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `Spotify`.`User` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Credit_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`Credit_card` (
  `Credit_card_num` INT NOT NULL,
  `Credit_card_caducity` DATE NOT NULL,
  `Credit_card_security` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Credit_card_num`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`PayPal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`PayPal` (
  `idPayPal` INT NOT NULL,
  `PayPal_username` VARCHAR(45) NULL,
  PRIMARY KEY (`idPayPal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`Payment` (
  `idPayment` INT NOT NULL AUTO_INCREMENT,
  `Payment_qty` DOUBLE NOT NULL,
  `Payment_date` DATETIME NULL,
  `Subscription_Subscription_id` INT NOT NULL,
  `Credit_card_Credit_card_num` INT NOT NULL,
  `PayPal_idPayPal` INT NOT NULL,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_Payment_Subscription1_idx` (`Subscription_Subscription_id` ASC) VISIBLE,
  INDEX `fk_Payment_Credit_card1_idx` (`Credit_card_Credit_card_num` ASC) VISIBLE,
  INDEX `fk_Payment_PayPal1_idx` (`PayPal_idPayPal` ASC) VISIBLE,
  CONSTRAINT `fk_Payment_Subscription1`
    FOREIGN KEY (`Subscription_Subscription_id`)
    REFERENCES `Spotify`.`Subscription` (`Subscription_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payment_Credit_card1`
    FOREIGN KEY (`Credit_card_Credit_card_num`)
    REFERENCES `Spotify`.`Credit_card` (`Credit_card_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payment_PayPal1`
    FOREIGN KEY (`PayPal_idPayPal`)
    REFERENCES `Spotify`.`PayPal` (`idPayPal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`Playlists` (
  `idPlaylists` INT NOT NULL AUTO_INCREMENT,
  `Playlists_title` VARCHAR(45) NOT NULL,
  `Playlist_number_songs` INT(4) NOT NULL,
  `Playlists_create_date` DATETIME NULL,
  PRIMARY KEY (`idPlaylists`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`User_has_Playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`User_has_Playlists` (
  `User_User_id` INT NOT NULL,
  `Playlists_idPlaylists` INT NOT NULL,
  PRIMARY KEY (`User_User_id`, `Playlists_idPlaylists`),
  INDEX `fk_User_has_Playlists_Playlists1_idx` (`Playlists_idPlaylists` ASC) VISIBLE,
  INDEX `fk_User_has_Playlists_User1_idx` (`User_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Playlists_User1`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `Spotify`.`User` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Playlists_Playlists1`
    FOREIGN KEY (`Playlists_idPlaylists`)
    REFERENCES `Spotify`.`Playlists` (`idPlaylists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`artist` (
  `idartist` INT NOT NULL AUTO_INCREMENT,
  `artist_name` VARCHAR(45) NOT NULL,
  `artist_phot` BLOB NULL,
  PRIMARY KEY (`idartist`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`albums` (
  `idalbums` INT NOT NULL AUTO_INCREMENT,
  `albums_title` VARCHAR(45) NOT NULL,
  `albums_year` INT(4) NOT NULL,
  `albums_cover_img` BLOB NULL,
  `artist_idartist` INT NOT NULL,
  PRIMARY KEY (`idalbums`),
  INDEX `fk_albums_artist1_idx` (`artist_idartist` ASC) VISIBLE,
  CONSTRAINT `fk_albums_artist1`
    FOREIGN KEY (`artist_idartist`)
    REFERENCES `Spotify`.`artist` (`idartist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`songs` (
  `idsongs` INT NOT NULL AUTO_INCREMENT,
  `songs_title` VARCHAR(45) NOT NULL,
  `songs_length` INT NOT NULL,
  `songs_num_reprod` INT NOT NULL,
  `albums_idalbums` INT NOT NULL,
  PRIMARY KEY (`idsongs`, `albums_idalbums`),
  INDEX `fk_songs_albums1_idx` (`albums_idalbums` ASC) VISIBLE,
  CONSTRAINT `fk_songs_albums1`
    FOREIGN KEY (`albums_idalbums`)
    REFERENCES `Spotify`.`albums` (`idalbums`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Playlists_has_songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`Playlists_has_songs` (
  `Playlists_idPlaylists` INT NOT NULL,
  `songs_idsongs` INT NOT NULL,
  PRIMARY KEY (`Playlists_idPlaylists`, `songs_idsongs`),
  INDEX `fk_Playlists_has_songs_songs1_idx` (`songs_idsongs` ASC) VISIBLE,
  INDEX `fk_Playlists_has_songs_Playlists1_idx` (`Playlists_idPlaylists` ASC) VISIBLE,
  CONSTRAINT `fk_Playlists_has_songs_Playlists1`
    FOREIGN KEY (`Playlists_idPlaylists`)
    REFERENCES `Spotify`.`Playlists` (`idPlaylists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlists_has_songs_songs1`
    FOREIGN KEY (`songs_idsongs`)
    REFERENCES `Spotify`.`songs` (`idsongs`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`User_fav_songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`User_fav_songs` (
  `User_User_id` INT NOT NULL,
  `songs_idsongs` INT NOT NULL,
  `songs_albums_idalbums` INT NOT NULL,
  PRIMARY KEY (`User_User_id`, `songs_idsongs`, `songs_albums_idalbums`),
  INDEX `fk_User_has_songs_songs1_idx` (`songs_idsongs` ASC, `songs_albums_idalbums` ASC) VISIBLE,
  INDEX `fk_User_has_songs_User1_idx` (`User_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_songs_User1`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `Spotify`.`User` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_songs_songs1`
    FOREIGN KEY (`songs_idsongs` , `songs_albums_idalbums`)
    REFERENCES `Spotify`.`songs` (`idsongs` , `albums_idalbums`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`albums_has_User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`albums_has_User` (
  `albums_idalbums` INT NOT NULL,
  `User_User_id` INT NOT NULL,
  PRIMARY KEY (`albums_idalbums`, `User_User_id`),
  INDEX `fk_albums_has_User_User1_idx` (`User_User_id` ASC) VISIBLE,
  INDEX `fk_albums_has_User_albums1_idx` (`albums_idalbums` ASC) VISIBLE,
  CONSTRAINT `fk_albums_has_User_albums1`
    FOREIGN KEY (`albums_idalbums`)
    REFERENCES `Spotify`.`albums` (`idalbums`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albums_has_User_User1`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `Spotify`.`User` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`User_has_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spotify`.`User_has_artist` (
  `User_User_id` INT NOT NULL,
  `artist_idartist` INT NOT NULL,
  PRIMARY KEY (`User_User_id`, `artist_idartist`),
  INDEX `fk_User_has_artist_artist1_idx` (`artist_idartist` ASC) VISIBLE,
  INDEX `fk_User_has_artist_User1_idx` (`User_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_artist_User1`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `Spotify`.`User` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_artist_artist1`
    FOREIGN KEY (`artist_idartist`)
    REFERENCES `Spotify`.`artist` (`idartist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
